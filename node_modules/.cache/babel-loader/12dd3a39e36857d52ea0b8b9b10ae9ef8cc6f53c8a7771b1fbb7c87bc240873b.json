{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\nimport image_five from \"../assets/images/five.png\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [scope, setScope] = useState(0);\n  const [xtwo, setXtwo] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [overlayCard, setOverlayCard] = useState(null);\n  const [fiveNumber, setFiveNumber] = useState(5);\n  const [xtwoNumber, setXtwoNumber] = useState(1);\n  const [zeroNumber, setZeroNumber] = useState(1);\n  const [bombNumber, setBombNumber] = useState(1);\n  const [cashNumber, setCashNumber] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [resetTrigger, setResetTrigger] = useState(0);\n  const [xtwoState, setXtwoState] = useState(false);\n  const balanceRef = useRef(null);\n  const resetGameAllClean = () => {\n    setScope(0);\n    //setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const resetGame = () => {\n    //setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const animateCoin = (startPosition, endRect, imgSrc) => {\n    return new Promise(resolve => {\n      const coin = document.createElement(\"img\");\n      coin.src = imgSrc;\n      coin.alt = \"coin\";\n      coin.style.position = \"fixed\";\n      coin.style.left = `${startPosition.x}px`;\n      coin.style.top = `${startPosition.y}px`;\n      coin.style.width = \"32px\";\n      coin.style.height = \"32px\";\n      coin.style.pointerEvents = \"none\";\n      coin.style.transition = \"all 0.8s ease-in-out\";\n      coin.style.zIndex = 9999;\n      coin.style.transformOrigin = \"center\";\n      coin.style.opacity = \"1\";\n      document.body.appendChild(coin);\n      requestAnimationFrame(() => {\n        coin.style.left = `${endRect.left + endRect.width / 2 - 16}px`;\n        coin.style.top = `${endRect.top + endRect.height / 2 - 16}px`;\n        coin.style.transform = \"scale(0.3)\";\n        coin.style.opacity = \"0\";\n      });\n      setTimeout(() => {\n        coin.remove();\n        resolve();\n      }, 600);\n    });\n  };\n  const handleMultipleCoinsOverlap = async (startPosition, card, count = 5, delay = 400) => {\n    if (!balanceRef.current) return;\n    const endRect = balanceRef.current.getBoundingClientRect();\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n      const shiftedStart = {\n        x: startPosition.x,\n        y: startPosition.y\n      };\n      const p = new Promise(resolve => {\n        setTimeout(async () => {\n          await animateCoin(shiftedStart, endRect, image_five);\n          resolve();\n        }, i * delay);\n      });\n      promises.push(p);\n    }\n    await Promise.all(promises);\n  };\n  const WorkCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        setOverlayCard(card);\n        setCashNumber(prev => prev - 1);\n        break;\n      case \"bomb\":\n        setOverlayCard(card);\n        setBombNumber(prev => prev - 1);\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        setXtwoNumber(prev => prev - 1);\n        setXtwoState(true);\n        break;\n      case \"zero\":\n        setZeroNumber(0);\n        break;\n      case \"five\":\n        if (xtwo === 1) {\n          setScope(prev => prev + card.value * 2);\n          setXtwo(0);\n          setFiveNumber(prev => prev - 1);\n        } else {\n          setScope(prev => prev + card.value);\n          setFiveNumber(prev => prev - 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const handleCardReveal = (card, index) => {\n    if (!gameStarted) {\n      setGameStarted(true);\n    }\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      index\n    }]);\n    WorkCards(card);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {\n      ref: balanceRef,\n      scope: scope,\n      xtwoState: xtwoState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: handleCardReveal,\n      resetTrigger: resetTrigger,\n      onCoinCreate: handleMultipleCoinsOverlap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {\n      five: fiveNumber,\n      xtwo: xtwoNumber,\n      zero: zeroNumber,\n      bomb: bombNumber,\n      cash: cashNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isActive: gameStarted,\n      onClick: gameStarted ? resetGame : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), overlayCard && /*#__PURE__*/_jsxDEV(Overlay, {\n      card: overlayCard,\n      scope: scope,\n      onClose: () => setOverlayCard(null),\n      resetGame: resetGameAllClean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"SKHCvUZrHSXnFYbaiLaNXYbAkDo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","Overlay","image_five","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","scope","setScope","xtwo","setXtwo","selectedCards","setSelectedCards","overlayCard","setOverlayCard","fiveNumber","setFiveNumber","xtwoNumber","setXtwoNumber","zeroNumber","setZeroNumber","bombNumber","setBombNumber","cashNumber","setCashNumber","gameStarted","setGameStarted","resetTrigger","setResetTrigger","xtwoState","setXtwoState","balanceRef","resetGameAllClean","prev","resetGame","animateCoin","startPosition","endRect","imgSrc","Promise","resolve","coin","document","createElement","src","alt","style","position","left","x","top","y","width","height","pointerEvents","transition","zIndex","transformOrigin","opacity","body","appendChild","requestAnimationFrame","transform","setTimeout","remove","handleMultipleCoinsOverlap","card","count","delay","current","getBoundingClientRect","promises","i","shiftedStart","p","push","all","WorkCards","type","value","handleCardReveal","index","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onCardReveal","onCoinCreate","five","zero","bomb","cash","isActive","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/pages/Game.js"],"sourcesContent":["import Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\"\nimport image_five from \"../assets/images/five.png\";\n\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\n\nfunction Game() {\n    const [scope, setScope] = useState(0);\n    const [xtwo, setXtwo] = useState(0);\n    const [selectedCards, setSelectedCards] = useState([]);\n    const [overlayCard, setOverlayCard] = useState(null);\n    const [fiveNumber, setFiveNumber] = useState(5);\n    const [xtwoNumber, setXtwoNumber] = useState(1);\n    const [zeroNumber, setZeroNumber] = useState(1);\n    const [bombNumber, setBombNumber] = useState(1);\n    const [cashNumber, setCashNumber] = useState(1);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [resetTrigger, setResetTrigger] = useState(0);\n    const [xtwoState, setXtwoState] = useState(false);\n    const balanceRef = useRef(null);\n\n    const resetGameAllClean = () => {\n        setScope(0);\n        //setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    };\n\n    const resetGame = () => {\n        //setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    }\n\n    const animateCoin = (startPosition, endRect, imgSrc) => {\n        return new Promise((resolve) => {\n            const coin = document.createElement(\"img\");\n            coin.src = imgSrc;\n            coin.alt = \"coin\";\n            coin.style.position = \"fixed\";\n            coin.style.left = `${startPosition.x}px`;\n            coin.style.top = `${startPosition.y}px`;\n            coin.style.width = \"32px\";\n            coin.style.height = \"32px\";\n            coin.style.pointerEvents = \"none\";\n            coin.style.transition = \"all 0.8s ease-in-out\";\n            coin.style.zIndex = 9999;\n            coin.style.transformOrigin = \"center\";\n            coin.style.opacity = \"1\";\n\n            document.body.appendChild(coin);\n\n            requestAnimationFrame(() => {\n                coin.style.left = `${endRect.left + endRect.width / 2 - 16}px`;\n                coin.style.top = `${endRect.top + endRect.height / 2 - 16}px`;\n                coin.style.transform = \"scale(0.3)\";\n                coin.style.opacity = \"0\";\n            });\n\n            setTimeout(() => {\n                coin.remove();\n                resolve();\n            }, 600);\n        });\n    };\n\n    const handleMultipleCoinsOverlap = async (startPosition, card, count = 5, delay = 400) => {\n        if (!balanceRef.current) return;\n\n        const endRect = balanceRef.current.getBoundingClientRect();\n\n        const promises = [];\n\n        for (let i = 0; i < count; i++) {\n            const shiftedStart = {\n                x: startPosition.x,\n                y: startPosition.y,\n            };\n\n            const p = new Promise((resolve) => {\n                setTimeout(async () => {\n                    await animateCoin(shiftedStart, endRect, image_five);\n                    resolve();\n                }, i * delay);\n            });\n            promises.push(p);\n        }\n\n        await Promise.all(promises);\n    };\n\n\n    const WorkCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                setOverlayCard(card);\n                setCashNumber(prev => prev - 1);\n                break;\n            case \"bomb\":\n                setOverlayCard(card);\n                setBombNumber(prev => prev - 1);\n                break;\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                setXtwoNumber(prev => prev - 1);\n                setXtwoState(true);\n                break;\n            case \"zero\":\n                setZeroNumber(0);\n                break;\n            case \"five\":\n                if (xtwo === 1) {\n                    setScope(prev => prev + card.value * 2);\n                    setXtwo(0);\n                    setFiveNumber(prev => prev - 1);\n                } else {\n                    setScope(prev => prev + card.value);\n                    setFiveNumber(prev => prev - 1);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n\n    const handleCardReveal = (card, index) => {\n        if (!gameStarted) {\n            setGameStarted(true);\n        }\n\n        setSelectedCards(prev => [...prev, { ...card, index }]);\n        WorkCards(card);\n    };\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter ref={balanceRef} scope={scope} xtwoState={xtwoState} />\n            <Grid\n                onCardReveal={handleCardReveal}\n                resetTrigger={resetTrigger}\n                onCoinCreate={handleMultipleCoinsOverlap}\n            />\n            <Tips five={fiveNumber} xtwo={xtwoNumber} zero={zeroNumber} bomb={bombNumber} cash={cashNumber} />\n            <Button\n                isActive={gameStarted}\n                onClick={gameStarted ? resetGame : null}\n            />\n            <Tapbar />\n            {overlayCard && (\n                <Overlay\n                    card={overlayCard}\n                    scope={scope}\n                    onClose={() => setOverlayCard(null)}\n                    resetGame={resetGameAllClean}\n                />\n            )}\n        </>\n    );\n}\n\nexport default Game;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}