{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/Test-Task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport { useGameState } from \"../hooks/useGameState\";\nimport { useGameLogic } from \"../hooks/useGameLogic\";\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const state = useGameState();\n  const {\n    handleCardReveal,\n    handleMultipleCoinsOverlap\n  } = useGameLogic(state);\n  const {\n    scope,\n    xtwoState,\n    balanceRef,\n    resetTrigger,\n    gameStarted,\n    setGameStarted,\n    resetGame,\n    overlayCard,\n    setOverlayCard,\n    fiveNumber,\n    xtwoNumber,\n    zeroNumber,\n    bombNumber,\n    cashNumber\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {\n      ref: balanceRef,\n      scope: scope,\n      xtwoState: xtwoState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: card => {\n        if (!gameStarted) {\n          setGameStarted(true);\n        }\n        handleCardReveal(card);\n      },\n      resetTrigger: resetTrigger,\n      onCoinCreate: (startPosition, card) => handleMultipleCoinsOverlap(startPosition, card, balanceRef)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {\n      five: fiveNumber,\n      xtwo: xtwoNumber,\n      zero: zeroNumber,\n      bomb: bombNumber,\n      cash: cashNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isActive: gameStarted,\n      onClick: gameStarted ? () => resetGame(false) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), overlayCard && /*#__PURE__*/_jsxDEV(Overlay, {\n      card: overlayCard,\n      scope: scope,\n      onClose: () => setOverlayCard(null),\n      resetGame: () => resetGame(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"uabuGpqlmiNgGJeDsFRYwK8BvyA=\", false, function () {\n  return [useGameState, useGameLogic];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useGameState","useGameLogic","Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","Overlay","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","state","handleCardReveal","handleMultipleCoinsOverlap","scope","xtwoState","balanceRef","resetTrigger","gameStarted","setGameStarted","resetGame","overlayCard","setOverlayCard","fiveNumber","xtwoNumber","zeroNumber","bombNumber","cashNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onCardReveal","card","onCoinCreate","startPosition","five","xtwo","zero","bomb","cash","isActive","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/Test-Task/src/pages/Game.js"],"sourcesContent":["import { useGameState } from \"../hooks/useGameState\";\nimport { useGameLogic } from \"../hooks/useGameLogic\";\n\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\n\nfunction Game() {\n    const state = useGameState();\n    const { handleCardReveal, handleMultipleCoinsOverlap } = useGameLogic(state);\n\n    const {\n        scope,\n        xtwoState,\n        balanceRef,\n        resetTrigger,\n        gameStarted,\n        setGameStarted,\n        resetGame,\n        overlayCard,\n        setOverlayCard,\n        fiveNumber,\n        xtwoNumber,\n        zeroNumber,\n        bombNumber,\n        cashNumber\n    } = state;\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter ref={balanceRef} scope={scope} xtwoState={xtwoState} />\n            <Grid\n                onCardReveal={(card) => {\n                    if (!gameStarted) {\n                        setGameStarted(true);\n                    }\n                    handleCardReveal(card);\n                }}\n                resetTrigger={resetTrigger}\n                onCoinCreate={(startPosition, card) =>\n                    handleMultipleCoinsOverlap(startPosition, card, balanceRef)\n                }\n            />\n            <Tips\n                five={fiveNumber}\n                xtwo={xtwoNumber}\n                zero={zeroNumber}\n                bomb={bombNumber}\n                cash={cashNumber}\n            />\n            <Button\n                isActive={gameStarted}\n                onClick={gameStarted ? () => resetGame(false) : null}\n            />\n            <Tapbar />\n            {overlayCard && (\n                <Overlay\n                    card={overlayCard}\n                    scope={scope}\n                    onClose={() => setOverlayCard(null)}\n                    resetGame={() => resetGame(true)}\n                />\n            )}\n        </>\n    );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}