{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [scope, setScope] = useState(0);\n  const [xtwo, setXtwo] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [overlayCard, setOverlayCard] = useState(null);\n  const [fiveNumber, setFiveNumber] = useState(5);\n  const [xtwoNumber, setXtwoNumber] = useState(1);\n  const [zeroNumber, setZeroNumber] = useState(1);\n  const [bombNumber, setBombNumber] = useState(1);\n  const [cashNumber, setCashNumber] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [resetTrigger, setResetTrigger] = useState(0);\n  const [xtwoState, setXtwoState] = useState(false);\n  const balanceRef = useRef(null);\n  const resetGameAllClean = () => {\n    setScope(0);\n    setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const resetGame = () => {\n    setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const handleCoinCreate = startPosition => {\n    if (!balanceRef.current) return;\n    const endRect = balanceRef.current.getBoundingClientRect();\n    const coin = document.createElement(\"div\");\n    coin.textContent = \"ðŸ’°\";\n    coin.style.position = \"fixed\";\n    coin.style.left = `${startPosition.x}px`;\n    coin.style.top = `${startPosition.y}px`;\n    coin.style.fontSize = \"32px\";\n    coin.style.pointerEvents = \"none\";\n    coin.style.transition = \"all 0.8s ease-in-out\";\n    coin.style.zIndex = 9999;\n    document.body.appendChild(coin);\n    requestAnimationFrame(() => {\n      coin.style.left = `${endRect.left + endRect.width / 2}px`;\n      coin.style.top = `${endRect.top + endRect.height / 2}px`;\n      coin.style.transform = \"scale(0.3)\";\n      coin.style.opacity = \"0\";\n    });\n    setTimeout(() => {\n      coin.remove();\n    }, 1000);\n  };\n  const WorkCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        setOverlayCard(card);\n        setCashNumber(prev => prev - 1);\n        break;\n      case \"bomb\":\n        setOverlayCard(card);\n        setBombNumber(prev => prev - 1);\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        setXtwoNumber(prev => prev - 1);\n        setXtwoState(true);\n        break;\n      case \"zero\":\n        setZeroNumber(0);\n        break;\n      case \"five\":\n        if (xtwo === 1) {\n          setScope(prev => prev + card.value * 2);\n          setXtwo(0);\n          setFiveNumber(prev => prev - 1);\n        } else {\n          setScope(prev => prev + card.value);\n          setFiveNumber(prev => prev - 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const stepBalance = () => {\n    for (let i = 0; i < numberStep; i++) {}\n  };\n  const handleCardReveal = (card, index) => {\n    if (!gameStarted) {\n      setGameStarted(true);\n    }\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      index\n    }]);\n    WorkCards(card);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {\n      scope: scope,\n      xtwoState: xtwoState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: handleCardReveal,\n      resetTrigger: resetTrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {\n      five: fiveNumber,\n      xtwo: xtwoNumber,\n      zero: zeroNumber,\n      bomb: bombNumber,\n      cash: cashNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isActive: gameStarted,\n      onClick: gameStarted ? resetGame : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), overlayCard && /*#__PURE__*/_jsxDEV(Overlay, {\n      card: overlayCard,\n      scope: scope,\n      onClose: () => setOverlayCard(null),\n      resetGame: resetGameAllClean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"SKHCvUZrHSXnFYbaiLaNXYbAkDo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","Overlay","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","scope","setScope","xtwo","setXtwo","selectedCards","setSelectedCards","overlayCard","setOverlayCard","fiveNumber","setFiveNumber","xtwoNumber","setXtwoNumber","zeroNumber","setZeroNumber","bombNumber","setBombNumber","cashNumber","setCashNumber","gameStarted","setGameStarted","resetTrigger","setResetTrigger","xtwoState","setXtwoState","balanceRef","useRef","resetGameAllClean","prev","resetGame","handleCoinCreate","startPosition","current","endRect","getBoundingClientRect","coin","document","createElement","textContent","style","position","left","x","top","y","fontSize","pointerEvents","transition","zIndex","body","appendChild","requestAnimationFrame","width","height","transform","opacity","setTimeout","remove","WorkCards","card","type","value","stepBalance","i","numberStep","handleCardReveal","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardReveal","five","zero","bomb","cash","isActive","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/pages/Game.js"],"sourcesContent":["import Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\"\n\nimport { useState } from \"react\";\n\nfunction Game() {\n    const [scope, setScope] = useState(0);\n    const [xtwo, setXtwo] = useState(0);\n    const [selectedCards, setSelectedCards] = useState([]);\n    const [overlayCard, setOverlayCard] = useState(null);\n    const [fiveNumber, setFiveNumber] = useState(5);\n    const [xtwoNumber, setXtwoNumber] = useState(1);\n    const [zeroNumber, setZeroNumber] = useState(1);\n    const [bombNumber, setBombNumber] = useState(1);\n    const [cashNumber, setCashNumber] = useState(1);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [resetTrigger, setResetTrigger] = useState(0);\n    const [xtwoState, setXtwoState] = useState(false);\n    const balanceRef = useRef(null);\n\n    const resetGameAllClean = () => {\n        setScope(0);\n        setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    };\n\n    const resetGame = () => {\n        setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    }\n\n\n    const handleCoinCreate = (startPosition) => {\n        if (!balanceRef.current) return;\n\n        const endRect = balanceRef.current.getBoundingClientRect();\n\n        const coin = document.createElement(\"div\");\n        coin.textContent = \"ðŸ’°\";\n        coin.style.position = \"fixed\";\n        coin.style.left = `${startPosition.x}px`;\n        coin.style.top = `${startPosition.y}px`;\n        coin.style.fontSize = \"32px\";\n        coin.style.pointerEvents = \"none\";\n        coin.style.transition = \"all 0.8s ease-in-out\";\n        coin.style.zIndex = 9999;\n\n        document.body.appendChild(coin);\n\n        requestAnimationFrame(() => {\n            coin.style.left = `${endRect.left + endRect.width / 2}px`;\n            coin.style.top = `${endRect.top + endRect.height / 2}px`;\n            coin.style.transform = \"scale(0.3)\";\n            coin.style.opacity = \"0\";\n        });\n\n        setTimeout(() => {\n            coin.remove();\n        }, 1000);\n    };\n\n    const WorkCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                setOverlayCard(card);\n                setCashNumber(prev => prev - 1);\n                break;\n            case \"bomb\":\n                setOverlayCard(card);\n                setBombNumber(prev => prev - 1);\n                break;\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                setXtwoNumber(prev => prev - 1);\n                setXtwoState(true);\n                break;\n            case \"zero\":\n                setZeroNumber(0);\n                break;\n            case \"five\":\n                if (xtwo === 1) {\n                    setScope(prev => prev + card.value * 2);\n                    setXtwo(0);\n                    setFiveNumber(prev => prev - 1);\n                } else {\n                    setScope(prev => prev + card.value);\n                    setFiveNumber(prev => prev - 1);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const stepBalance = () => {\n        for (let i = 0; i < numberStep; i++){\n\n        }\n    }\n\n    const handleCardReveal = (card, index) => {\n        if (!gameStarted) {\n            setGameStarted(true);\n        }\n\n        setSelectedCards(prev => [...prev, { ...card, index }]);\n        WorkCards(card);\n    };\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter scope={scope} xtwoState={xtwoState} />\n            <Grid onCardReveal={handleCardReveal} resetTrigger={resetTrigger} />\n            <Tips five={fiveNumber} xtwo={xtwoNumber} zero={zeroNumber} bomb={bombNumber} cash={cashNumber} />\n            <Button\n                isActive={gameStarted}\n                onClick={gameStarted ? resetGame : null}\n            />\n            <Tapbar />\n            {overlayCard && (\n                <Overlay\n                    card={overlayCard}\n                    scope={scope}\n                    onClose={() => setOverlayCard(null)}\n                    resetGame={resetGameAllClean}\n                />\n            )}\n        </>\n    );\n}\n\nexport default Game;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}