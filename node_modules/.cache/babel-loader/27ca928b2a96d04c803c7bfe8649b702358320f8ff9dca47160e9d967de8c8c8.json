{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport { useState } from \"react\";\n//import Overlay from \"../components/Overlay/Overlay\"; // ✅ виправлений імпорт\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [scope, setScope] = useState(0);\n  const [xtwo, setXtwo] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const WorkCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        // Додай логіку для \"cash\", якщо потрібно\n        break;\n      case \"bomb\":\n        // Тут можна показати Overlay або кінець гри\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        break;\n      case \"zero\":\n        // 0 балів — нічого не робимо\n        break;\n      case \"five\":\n        if (xtwo === 1) {\n          setScope(prev => prev + card.value * 2);\n          setXtwo(0); // скидаємо X2 після використання\n        } else {\n          setScope(prev => prev + card.value);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const handleCardReveal = (card, index) => {\n    // Опціонально: зберігати всі відкриті карти\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      index\n    }]);\n    WorkCards(card);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: handleCardReveal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"Rk+tx3hsd2jeXMNNTRn3xe0ORQ8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","scope","setScope","xtwo","setXtwo","selectedCards","setSelectedCards","WorkCards","card","type","prev","value","handleCardReveal","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardReveal","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/pages/Game.js"],"sourcesContent":["import Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\n\nimport { useState } from \"react\";\n//import Overlay from \"../components/Overlay/Overlay\"; // ✅ виправлений імпорт\n\nfunction Game() {\n    const [scope, setScope] = useState(0);\n    const [xtwo, setXtwo] = useState(0);\n    const [selectedCards, setSelectedCards] = useState([]);\n\n    const WorkCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                // Додай логіку для \"cash\", якщо потрібно\n                break;\n\n            case \"bomb\":\n                // Тут можна показати Overlay або кінець гри\n                break;\n\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                break;\n\n            case \"zero\":\n                // 0 балів — нічого не робимо\n                break;\n\n            case \"five\":\n                if (xtwo === 1) {\n                    setScope(prev => prev + card.value * 2);\n                    setXtwo(0); // скидаємо X2 після використання\n                } else {\n                    setScope(prev => prev + card.value);\n                }\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    const handleCardReveal = (card, index) => {\n        // Опціонально: зберігати всі відкриті карти\n        setSelectedCards(prev => [...prev, { ...card, index }]);\n\n        WorkCards(card);\n    };\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter/>\n            <Grid onCardReveal={handleCardReveal} />\n            <Tips />\n            <Button />\n            <Tapbar />\n            {/* Можна показати <Overlay /> тут, якщо буде поразка від \"bomb\" */}\n        </>\n    );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,aAAa,MAAM,6CAA6C;AAEvE,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,SAAS,GAAIC,IAAI,IAAK;IACxB,QAAQA,IAAI,CAACC,IAAI;MACb,KAAK,MAAM;QACP;QACA;MAEJ,KAAK,MAAM;QACP;QACA;MAEJ,KAAK,MAAM;QACPL,OAAO,CAAC,CAAC,CAAC;QACVF,QAAQ,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QAC1B;MAEJ,KAAK,MAAM;QACP;QACA;MAEJ,KAAK,MAAM;QACP,IAAIP,IAAI,KAAK,CAAC,EAAE;UACZD,QAAQ,CAACQ,IAAI,IAAIA,IAAI,GAAGF,IAAI,CAACG,KAAK,GAAG,CAAC,CAAC;UACvCP,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,MAAM;UACHF,QAAQ,CAACQ,IAAI,IAAIA,IAAI,GAAGF,IAAI,CAACG,KAAK,CAAC;QACvC;QACA;MAEJ;QACI;IACR;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACJ,IAAI,EAAEK,KAAK,KAAK;IACtC;IACAP,gBAAgB,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE,GAAGF,IAAI;MAAEK;IAAM,CAAC,CAAC,CAAC;IAEvDN,SAAS,CAACC,IAAI,CAAC;EACnB,CAAC;EAED,oBACIZ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACP,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTtB,OAAA,CAACH,aAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChBtB,OAAA,CAACL,IAAI;MAAC4B,YAAY,EAAEP;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCtB,OAAA,CAACR,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRtB,OAAA,CAACN,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACT,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAEZ,CAAC;AAEX;AAAClB,EAAA,CAzDQD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA2Db,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}