{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [scope, setScope] = useState(0);\n  const [xtwo, setXtwo] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [overlayCard, setOverlayCard] = useState(null);\n  const [fiveNumber, setFiveNumber] = useState(5);\n  const [xtwoNumber, setXtwoNumber] = useState(1);\n  const [zeroNumber, setZeroNumber] = useState(1);\n  const [bombNumber, setBombNumber] = useState(1);\n  const [cashNumber, setCashNumber] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [resetTrigger, setResetTrigger] = useState(0);\n  const [xtwoState, setXtwoState] = useState(false);\n  const balanceRef = useRef(null);\n  const resetGameAllClean = () => {\n    setScope(0);\n    setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const resetGame = () => {\n    setSelectedCards([]);\n    setOverlayCard(null);\n    setFiveNumber(5);\n    setXtwoNumber(1);\n    setZeroNumber(1);\n    setBombNumber(1);\n    setCashNumber(1);\n    setGameStarted(false);\n    setResetTrigger(prev => prev + 1);\n    setXtwoState(false);\n    setXtwo(0);\n  };\n  const WorkCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        setOverlayCard(card);\n        setCashNumber(prev => prev - 1);\n        break;\n      case \"bomb\":\n        setOverlayCard(card);\n        setBombNumber(prev => prev - 1);\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        setXtwoNumber(prev => prev - 1);\n        setXtwoState(true);\n        break;\n      case \"zero\":\n        setZeroNumber(0);\n        break;\n      case \"five\":\n        if (xtwo === 1) {\n          setScope(prev => prev + card.value * 2);\n          setXtwo(0);\n          setFiveNumber(prev => prev - 1);\n        } else {\n          setScope(prev => prev + card.value);\n          setFiveNumber(prev => prev - 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const stepBalance = () => {\n    for (let i = 0; i < numberStep; i++) {}\n  };\n  const handleCardReveal = (card, index) => {\n    if (!gameStarted) {\n      setGameStarted(true);\n    }\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      index\n    }]);\n    WorkCards(card);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {\n      scope: scope,\n      xtwoState: xtwoState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: handleCardReveal,\n      resetTrigger: resetTrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {\n      five: fiveNumber,\n      xtwo: xtwoNumber,\n      zero: zeroNumber,\n      bomb: bombNumber,\n      cash: cashNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isActive: gameStarted,\n      onClick: gameStarted ? resetGame : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), overlayCard && /*#__PURE__*/_jsxDEV(Overlay, {\n      card: overlayCard,\n      scope: scope,\n      onClose: () => setOverlayCard(null),\n      resetGame: resetGameAllClean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"SKHCvUZrHSXnFYbaiLaNXYbAkDo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","Overlay","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","scope","setScope","xtwo","setXtwo","selectedCards","setSelectedCards","overlayCard","setOverlayCard","fiveNumber","setFiveNumber","xtwoNumber","setXtwoNumber","zeroNumber","setZeroNumber","bombNumber","setBombNumber","cashNumber","setCashNumber","gameStarted","setGameStarted","resetTrigger","setResetTrigger","xtwoState","setXtwoState","balanceRef","resetGameAllClean","prev","resetGame","WorkCards","card","type","value","stepBalance","i","numberStep","handleCardReveal","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardReveal","five","zero","bomb","cash","isActive","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/pages/Game.js"],"sourcesContent":["import Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\"\n\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\n\nfunction Game() {\n    const [scope, setScope] = useState(0);\n    const [xtwo, setXtwo] = useState(0);\n    const [selectedCards, setSelectedCards] = useState([]);\n    const [overlayCard, setOverlayCard] = useState(null);\n    const [fiveNumber, setFiveNumber] = useState(5);\n    const [xtwoNumber, setXtwoNumber] = useState(1);\n    const [zeroNumber, setZeroNumber] = useState(1);\n    const [bombNumber, setBombNumber] = useState(1);\n    const [cashNumber, setCashNumber] = useState(1);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [resetTrigger, setResetTrigger] = useState(0);\n    const [xtwoState, setXtwoState] = useState(false);\n    const balanceRef = useRef(null);\n\n    const resetGameAllClean = () => {\n        setScope(0);\n        setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    };\n\n    const resetGame = () => {\n        setSelectedCards([]);\n        setOverlayCard(null);\n        setFiveNumber(5);\n        setXtwoNumber(1);\n        setZeroNumber(1);\n        setBombNumber(1);\n        setCashNumber(1);\n        setGameStarted(false);\n        setResetTrigger(prev => prev + 1);\n        setXtwoState(false);\n        setXtwo(0);\n    }\n\n    const WorkCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                setOverlayCard(card);\n                setCashNumber(prev => prev - 1);\n                break;\n            case \"bomb\":\n                setOverlayCard(card);\n                setBombNumber(prev => prev - 1);\n                break;\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                setXtwoNumber(prev => prev - 1);\n                setXtwoState(true);\n                break;\n            case \"zero\":\n                setZeroNumber(0);\n                break;\n            case \"five\":\n                if (xtwo === 1) {\n                    setScope(prev => prev + card.value * 2);\n                    setXtwo(0);\n                    setFiveNumber(prev => prev - 1);\n                } else {\n                    setScope(prev => prev + card.value);\n                    setFiveNumber(prev => prev - 1);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const stepBalance = () => {\n        for (let i = 0; i < numberStep; i++){\n\n        }\n    }\n\n    const handleCardReveal = (card, index) => {\n        if (!gameStarted) {\n            setGameStarted(true);\n        }\n\n        setSelectedCards(prev => [...prev, { ...card, index }]);\n        WorkCards(card);\n    };\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter scope={scope} xtwoState={xtwoState} />\n            <Grid onCardReveal={handleCardReveal} resetTrigger={resetTrigger} />\n            <Tips five={fiveNumber} xtwo={xtwoNumber} zero={zeroNumber} bomb={bombNumber} cash={cashNumber} />\n            <Button\n                isActive={gameStarted}\n                onClick={gameStarted ? resetGame : null}\n            />\n            <Tapbar />\n            {overlayCard && (\n                <Overlay\n                    card={overlayCard}\n                    scope={scope}\n                    onClose={() => setOverlayCard(null)}\n                    resetGame={resetGameAllClean}\n                />\n            )}\n        </>\n    );\n}\n\nexport default Game;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}