{"ast":null,"code":"import image_five from \"../assets/images/five.png\";\nexport function useGameLogic(state) {\n  const {\n    setScope,\n    setXtwo,\n    setOverlayCard,\n    setXtwoState,\n    setFiveNumber,\n    setXtwoNumber,\n    setZeroNumber,\n    setBombNumber,\n    setCashNumber,\n    xtwo\n  } = state;\n  const animateCoin = (startPosition, endRect, imgSrc) => {\n    return new Promise(resolve => {\n      const coin = document.createElement(\"img\");\n      coin.src = imgSrc;\n      coin.style.position = \"fixed\";\n      coin.style.left = `${startPosition.x}px`;\n      coin.style.top = `${startPosition.y}px`;\n      coin.style.width = \"32px\";\n      coin.style.height = \"32px\";\n      coin.style.pointerEvents = \"none\";\n      coin.style.transition = \"all 0.8s ease-in-out\";\n      coin.style.zIndex = 9999;\n      coin.style.transformOrigin = \"center\";\n      coin.style.opacity = \"1\";\n      document.body.appendChild(coin);\n      requestAnimationFrame(() => {\n        coin.style.left = `${endRect.left + endRect.width / 2 - 16}px`;\n        coin.style.top = `${endRect.top + endRect.height / 2 - 16}px`;\n        coin.style.transform = \"scale(0.3)\";\n        coin.style.opacity = \"0\";\n      });\n      setTimeout(() => {\n        coin.remove();\n        resolve();\n      }, 600);\n    });\n  };\n  const createExplosion = (x, y) => {\n    const explosion = document.createElement(\"div\");\n    explosion.style.position = \"absolute\";\n    explosion.style.left = `${x}px`;\n    explosion.style.top = `${y}px`;\n    explosion.style.pointerEvents = \"none\";\n    explosion.style.zIndex = 9999;\n    const colors = [\"#ff0\", \"#f00\", \"#f80\", \"#0f0\", \"#0ff\", \"#f0f\", \"#fff\"];\n    for (let i = 0; i < 60; i++) {\n      const particle = document.createElement(\"div\");\n      const size = Math.random() * 8 + 4;\n      const angle = Math.random() * 2 * Math.PI;\n      const radius = 50 + Math.random() * 100;\n      const xOffset = Math.cos(angle) * radius;\n      const yOffset = Math.sin(angle) * radius;\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      const delay = Math.random() * 0.3;\n      particle.style.position = \"absolute\";\n      particle.style.width = `${size}px`;\n      particle.style.height = `${size}px`;\n      particle.style.borderRadius = \"50%\";\n      particle.style.background = color;\n      particle.style.boxShadow = `0 0 10px ${color}`;\n      particle.style.opacity = \"1\";\n      particle.style.transform = \"translate(0, 0)\";\n      particle.style.transition = `all 1s ease-out ${delay}s`;\n      explosion.appendChild(particle);\n      requestAnimationFrame(() => {\n        particle.style.transform = `translate(${xOffset}px, ${yOffset}px) scale(0.5) rotate(720deg)`;\n        particle.style.opacity = \"0\";\n        particle.style.filter = \"blur(4px)\";\n      });\n    }\n    document.body.appendChild(explosion);\n    setTimeout(() => {\n      explosion.remove();\n    }, 1500);\n  };\n  const handleMultipleCoinsOverlap = async (startPosition, clickedCard, ref, count = 5, delay = 400) => {\n    if (!ref.current) return;\n    if (clickedCard.type === \"five\") {\n      const promises = [];\n      for (let i = 0; i < count; i++) {\n        const p = new Promise(resolve => {\n          setTimeout(async () => {\n            await animateCoin(startPosition, ref.current.getBoundingClientRect(), image_five);\n            resolve();\n          }, i * delay);\n        });\n        promises.push(p);\n      }\n      await Promise.all(promises);\n    } else if (clickedCard.type === \"bomb\") {\n      createExplosion(startPosition.x, startPosition.y);\n    }\n  };\n  const workCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        setOverlayCard(card);\n        setCashNumber(prev => prev - 1);\n        break;\n      case \"bomb\":\n        setOverlayCard(card);\n        setBombNumber(prev => prev - 1);\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        setXtwoNumber(prev => prev - 1);\n        setXtwoState(true);\n        break;\n      case \"zero\":\n        setZeroNumber(0);\n        break;\n      case \"five\":\n        setScope(prev => prev + card.value * (xtwo === 1 ? 2 : 1));\n        setFiveNumber(prev => prev - 1);\n        setXtwo(0);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleCardReveal = card => {\n    workCards(card);\n  };\n  return {\n    handleCardReveal,\n    handleMultipleCoinsOverlap\n  };\n}","map":{"version":3,"names":["image_five","useGameLogic","state","setScope","setXtwo","setOverlayCard","setXtwoState","setFiveNumber","setXtwoNumber","setZeroNumber","setBombNumber","setCashNumber","xtwo","animateCoin","startPosition","endRect","imgSrc","Promise","resolve","coin","document","createElement","src","style","position","left","x","top","y","width","height","pointerEvents","transition","zIndex","transformOrigin","opacity","body","appendChild","requestAnimationFrame","transform","setTimeout","remove","createExplosion","explosion","colors","i","particle","size","Math","random","angle","PI","radius","xOffset","cos","yOffset","sin","color","floor","length","delay","borderRadius","background","boxShadow","filter","handleMultipleCoinsOverlap","clickedCard","ref","count","current","type","promises","p","getBoundingClientRect","push","all","workCards","card","prev","value","handleCardReveal"],"sources":["/Users/mac/Desktop/test-task/Test-Task/src/hooks/useGameLogic.js"],"sourcesContent":["import image_five from \"../assets/images/five.png\";\n\nexport function useGameLogic(state) {\n    const {\n        setScope, setXtwo, setOverlayCard, setXtwoState,\n        setFiveNumber, setXtwoNumber, setZeroNumber,\n        setBombNumber, setCashNumber, xtwo\n    } = state;\n\n    const animateCoin = (startPosition, endRect, imgSrc) => {\n        return new Promise((resolve) => {\n            const coin = document.createElement(\"img\");\n            coin.src = imgSrc;\n            coin.style.position = \"fixed\";\n            coin.style.left = `${startPosition.x}px`;\n            coin.style.top = `${startPosition.y}px`;\n            coin.style.width = \"32px\";\n            coin.style.height = \"32px\";\n            coin.style.pointerEvents = \"none\";\n            coin.style.transition = \"all 0.8s ease-in-out\";\n            coin.style.zIndex = 9999;\n            coin.style.transformOrigin = \"center\";\n            coin.style.opacity = \"1\";\n\n            document.body.appendChild(coin);\n\n            requestAnimationFrame(() => {\n                coin.style.left = `${endRect.left + endRect.width / 2 - 16}px`;\n                coin.style.top = `${endRect.top + endRect.height / 2 - 16}px`;\n                coin.style.transform = \"scale(0.3)\";\n                coin.style.opacity = \"0\";\n            });\n\n            setTimeout(() => {\n                coin.remove();\n                resolve();\n            }, 600);\n        });\n    };\n\n    const createExplosion = (x, y) => {\n        const explosion = document.createElement(\"div\");\n        explosion.style.position = \"absolute\";\n        explosion.style.left = `${x}px`;\n        explosion.style.top = `${y}px`;\n        explosion.style.pointerEvents = \"none\";\n        explosion.style.zIndex = 9999;\n\n        const colors = [\"#ff0\", \"#f00\", \"#f80\", \"#0f0\", \"#0ff\", \"#f0f\", \"#fff\"];\n\n        for (let i = 0; i < 60; i++) {\n            const particle = document.createElement(\"div\");\n            const size = Math.random() * 8 + 4;\n            const angle = Math.random() * 2 * Math.PI;\n            const radius = 50 + Math.random() * 100;\n            const xOffset = Math.cos(angle) * radius;\n            const yOffset = Math.sin(angle) * radius;\n            const color = colors[Math.floor(Math.random() * colors.length)];\n            const delay = Math.random() * 0.3;\n\n            particle.style.position = \"absolute\";\n            particle.style.width = `${size}px`;\n            particle.style.height = `${size}px`;\n            particle.style.borderRadius = \"50%\";\n            particle.style.background = color;\n            particle.style.boxShadow = `0 0 10px ${color}`;\n            particle.style.opacity = \"1\";\n            particle.style.transform = \"translate(0, 0)\";\n            particle.style.transition = `all 1s ease-out ${delay}s`;\n\n            explosion.appendChild(particle);\n\n            requestAnimationFrame(() => {\n                particle.style.transform = `translate(${xOffset}px, ${yOffset}px) scale(0.5) rotate(720deg)`;\n                particle.style.opacity = \"0\";\n                particle.style.filter = \"blur(4px)\";\n            });\n        }\n\n        document.body.appendChild(explosion);\n\n        setTimeout(() => {\n            explosion.remove();\n        }, 1500);\n    };\n\n    const handleMultipleCoinsOverlap = async (startPosition, clickedCard, ref, count = 5, delay = 400) => {\n        if (!ref.current) return;\n\n        if (clickedCard.type === \"five\") {\n            const promises = [];\n\n            for (let i = 0; i < count; i++) {\n                const p = new Promise((resolve) => {\n                    setTimeout(async () => {\n                        await animateCoin(startPosition, ref.current.getBoundingClientRect(), image_five);\n                        resolve();\n                    }, i * delay);\n                });\n                promises.push(p);\n            }\n\n            await Promise.all(promises);\n        } else if (clickedCard.type === \"bomb\") {\n            createExplosion(startPosition.x, startPosition.y);\n        }\n    };\n\n    const workCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                setOverlayCard(card);\n                setCashNumber(prev => prev - 1);\n                break;\n            case \"bomb\":\n                setOverlayCard(card);\n                setBombNumber(prev => prev - 1);\n                break;\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                setXtwoNumber(prev => prev - 1);\n                setXtwoState(true);\n                break;\n            case \"zero\":\n                setZeroNumber(0);\n                break;\n            case \"five\":\n                setScope(prev => prev + card.value * (xtwo === 1 ? 2 : 1));\n                setFiveNumber(prev => prev - 1);\n                setXtwo(0);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleCardReveal = (card) => {\n        workCards(card);\n    };\n\n    return {\n        handleCardReveal,\n        handleMultipleCoinsOverlap\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}