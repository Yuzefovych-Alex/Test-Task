{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/components/Grid/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Grid.module.css\";\nimport { motion } from \"framer-motion\";\nimport image_light from \"../../assets/images/light.png\";\nimport image_cash from \"../../assets/images/cash.png\";\nimport image_bomb from \"../../assets/images/bomb.png\";\nimport image_five from \"../../assets/images/five.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Grid() {\n  _s();\n  const [carts, setCarts] = useState([]);\n  const [revealed, setRevealed] = useState(Array(9).fill(false));\n  const [showContent, setShowContent] = useState(Array(9).fill(false)); // для показу вмісту після анімації\n\n  const five = 5;\n  const cash = 1;\n  const bomb = 1;\n  const xtwo = 1;\n  const zero = 1;\n  useEffect(() => {\n    const fiveValues = [100, 500, 1000, 10000];\n    const fiveCards = Array(five).fill(null).map(() => ({\n      type: \"five\",\n      value: fiveValues[Math.floor(Math.random() * fiveValues.length)]\n    }));\n    const allCarts = [...fiveCards, ...Array(cash).fill({\n      type: \"cash\"\n    }), ...Array(bomb).fill({\n      type: \"bomb\"\n    }), ...Array(xtwo).fill({\n      type: \"xtwo\"\n    }), ...Array(zero).fill({\n      type: \"zero\"\n    })];\n    const shuffled = [...allCarts].sort(() => Math.random() - 0.5);\n    setCarts(shuffled);\n  }, []);\n  const handleClick = index => {\n    if (revealed[index]) return; // щоб не клікати по вже відкритій\n\n    setRevealed(prev => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n\n    // Сховати контент поки анімація не завершиться\n    setShowContent(prev => {\n      const updated = [...prev];\n      updated[index] = false;\n      return updated;\n    });\n  };\n  const handleAnimationComplete = (index, currentRotate) => {\n    // Якщо поворот 180, показуємо контент\n    if (currentRotate === 180) {\n      setShowContent(prev => {\n        const updated = [...prev];\n        updated[index] = true;\n        return updated;\n      });\n    }\n  };\n  const formatNumber = num => {\n    return num >= 1000 ? `${num / 1000}K` : num;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Carts,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: carts.map((card, index) => {\n          const isRevealed = revealed[index];\n          const isContentVisible = showContent[index];\n          return /*#__PURE__*/_jsxDEV(motion.li, {\n            className: `${styles.item}`,\n            onClick: () => handleClick(index),\n            animate: {\n              rotateY: isRevealed ? 180 : 0\n            },\n            transition: {\n              duration: 0.6\n            },\n            style: {\n              transformStyle: \"preserve-3d\"\n            },\n            onAnimationComplete: () => handleAnimationComplete(index, isRevealed ? 180 : 0),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardFace,\n              style: {\n                backfaceVisibility: \"hidden\",\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.cover,\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardBack,\n              style: {\n                transform: \"rotateY(180deg)\",\n                backfaceVisibility: \"hidden\",\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\"\n              },\n              children: [isContentVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.itemData} ${styles[card.type]}`,\n                children: [card.type === \"five\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: styles.icon,\n                    src: image_five,\n                    alt: \"five\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: styles.number,\n                    children: formatNumber(card.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true), card.type === \"bomb\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.iconBomb,\n                  src: image_bomb,\n                  alt: \"bomb\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 49\n                }, this), card.type === \"cash\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.iconCash,\n                  src: image_cash,\n                  alt: \"cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 49\n                }, this), card.type === \"xtwo\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: styles.number,\n                  children: \"X2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 49\n                }, this), card.type === \"zero\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: styles.number,\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this), isContentVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.imageLight} ${styles.imageLightFive} ${styles.imageLightCash}`,\n                style: {\n                  backgroundImage: `url(${image_light})`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Grid, \"YJ9JTtoWwaThzI9uuzX/EGhOxQs=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","styles","motion","image_light","image_cash","image_bomb","image_five","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","_s","carts","setCarts","revealed","setRevealed","Array","fill","showContent","setShowContent","five","cash","bomb","xtwo","zero","fiveValues","fiveCards","map","type","value","Math","floor","random","length","allCarts","shuffled","sort","handleClick","index","prev","updated","handleAnimationComplete","currentRotate","formatNumber","num","className","Carts","children","container","list","card","isRevealed","isContentVisible","li","item","onClick","animate","rotateY","transition","duration","style","transformStyle","onAnimationComplete","cardFace","backfaceVisibility","position","width","height","cover","fileName","_jsxFileName","lineNumber","columnNumber","cardBack","transform","itemData","icon","src","alt","number","iconBomb","iconCash","imageLight","imageLightFive","imageLightCash","backgroundImage","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/components/Grid/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Grid.module.css\";\nimport { motion } from \"framer-motion\";\n\nimport image_light from \"../../assets/images/light.png\";\nimport image_cash from \"../../assets/images/cash.png\";\nimport image_bomb from \"../../assets/images/bomb.png\";\nimport image_five from \"../../assets/images/five.png\";\n\nfunction Grid() {\n    const [carts, setCarts] = useState([]);\n    const [revealed, setRevealed] = useState(Array(9).fill(false));\n    const [showContent, setShowContent] = useState(Array(9).fill(false)); // для показу вмісту після анімації\n\n    const five = 5;\n    const cash = 1;\n    const bomb = 1;\n    const xtwo = 1;\n    const zero = 1;\n\n    useEffect(() => {\n        const fiveValues = [100, 500, 1000, 10000];\n        const fiveCards = Array(five)\n            .fill(null)\n            .map(() => ({\n                type: \"five\",\n                value: fiveValues[Math.floor(Math.random() * fiveValues.length)],\n            }));\n\n        const allCarts = [\n            ...fiveCards,\n            ...Array(cash).fill({ type: \"cash\" }),\n            ...Array(bomb).fill({ type: \"bomb\" }),\n            ...Array(xtwo).fill({ type: \"xtwo\" }),\n            ...Array(zero).fill({ type: \"zero\" }),\n        ];\n\n        const shuffled = [...allCarts].sort(() => Math.random() - 0.5);\n        setCarts(shuffled);\n    }, []);\n\n    const handleClick = (index) => {\n        if (revealed[index]) return; // щоб не клікати по вже відкритій\n\n        setRevealed((prev) => {\n            const updated = [...prev];\n            updated[index] = true;\n            return updated;\n        });\n\n        // Сховати контент поки анімація не завершиться\n        setShowContent((prev) => {\n            const updated = [...prev];\n            updated[index] = false;\n            return updated;\n        });\n    };\n\n    const handleAnimationComplete = (index, currentRotate) => {\n        // Якщо поворот 180, показуємо контент\n        if (currentRotate === 180) {\n            setShowContent((prev) => {\n                const updated = [...prev];\n                updated[index] = true;\n                return updated;\n            });\n        }\n    };\n\n    const formatNumber = (num) => {\n        return num >= 1000 ? `${num / 1000}K` : num;\n    };\n\n    return (\n        <div className={styles.Carts}>\n            <div className={styles.container}>\n                <ul className={styles.list}>\n                    {carts.map((card, index) => {\n                        const isRevealed = revealed[index];\n                        const isContentVisible = showContent[index];\n\n                        return (\n                            <motion.li\n                                key={index}\n                                className={`${styles.item}`}\n                                onClick={() => handleClick(index)}\n                                animate={{ rotateY: isRevealed ? 180 : 0 }}\n                                transition={{ duration: 0.6 }}\n                                style={{ transformStyle: \"preserve-3d\" }}\n                                onAnimationComplete={() =>\n                                    handleAnimationComplete(index, isRevealed ? 180 : 0)\n                                }\n                            >\n                                <div\n                                    className={styles.cardFace}\n                                    style={{\n                                        backfaceVisibility: \"hidden\",\n                                        position: \"absolute\",\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                    }}\n                                >\n                                    <div className={styles.cover}>$</div>\n                                </div>\n\n                                <div\n                                    className={styles.cardBack}\n                                    style={{\n                                        transform: \"rotateY(180deg)\",\n                                        backfaceVisibility: \"hidden\",\n                                        position: \"absolute\",\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                    }}\n                                >\n                                    {isContentVisible && (\n                                        <div className={`${styles.itemData} ${styles[card.type]}`}>\n                                            {card.type === \"five\" && (\n                                                <>\n                                                    <img\n                                                        className={styles.icon}\n                                                        src={image_five}\n                                                        alt=\"five\"\n                                                    />\n                                                    <h1 className={styles.number}>\n                                                        {formatNumber(card.value)}\n                                                    </h1>\n                                                </>\n                                            )}\n                                            {card.type === \"bomb\" && (\n                                                <img\n                                                    className={styles.iconBomb}\n                                                    src={image_bomb}\n                                                    alt=\"bomb\"\n                                                />\n                                            )}\n                                            {card.type === \"cash\" && (\n                                                <img\n                                                    className={styles.iconCash}\n                                                    src={image_cash}\n                                                    alt=\"cash\"\n                                                />\n                                            )}\n                                            {card.type === \"xtwo\" && (\n                                                <h1 className={styles.number}>X2</h1>\n                                            )}\n                                            {card.type === \"zero\" && (\n                                                <h1 className={styles.number}>0</h1>\n                                            )}\n                                        </div>\n                                    )}\n\n                                    {isContentVisible && (\n                                        <div\n                                            className={`${styles.imageLight} ${styles.imageLightFive} ${styles.imageLightCash}`}\n                                            style={{ backgroundImage: `url(${image_light})` }}\n                                        ></div>\n                                    )}\n                                </div>\n                            </motion.li>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Grid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,UAAU,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC9D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEtE,MAAMG,IAAI,GAAG,CAAC;EACd,MAAMC,IAAI,GAAG,CAAC;EACd,MAAMC,IAAI,GAAG,CAAC;EACd,MAAMC,IAAI,GAAG,CAAC;EACd,MAAMC,IAAI,GAAG,CAAC;EAEdzB,SAAS,CAAC,MAAM;IACZ,MAAM0B,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;IAC1C,MAAMC,SAAS,GAAGV,KAAK,CAACI,IAAI,CAAC,CACxBH,IAAI,CAAC,IAAI,CAAC,CACVU,GAAG,CAAC,OAAO;MACRC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAEJ,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACQ,MAAM,CAAC;IACnE,CAAC,CAAC,CAAC;IAEP,MAAMC,QAAQ,GAAG,CACb,GAAGR,SAAS,EACZ,GAAGV,KAAK,CAACK,IAAI,CAAC,CAACJ,IAAI,CAAC;MAAEW,IAAI,EAAE;IAAO,CAAC,CAAC,EACrC,GAAGZ,KAAK,CAACM,IAAI,CAAC,CAACL,IAAI,CAAC;MAAEW,IAAI,EAAE;IAAO,CAAC,CAAC,EACrC,GAAGZ,KAAK,CAACO,IAAI,CAAC,CAACN,IAAI,CAAC;MAAEW,IAAI,EAAE;IAAO,CAAC,CAAC,EACrC,GAAGZ,KAAK,CAACQ,IAAI,CAAC,CAACP,IAAI,CAAC;MAAEW,IAAI,EAAE;IAAO,CAAC,CAAC,CACxC;IAED,MAAMO,QAAQ,GAAG,CAAC,GAAGD,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAMN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9DnB,QAAQ,CAACsB,QAAQ,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAIxB,QAAQ,CAACwB,KAAK,CAAC,EAAE,OAAO,CAAC;;IAE7BvB,WAAW,CAAEwB,IAAI,IAAK;MAClB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;MACzBC,OAAO,CAACF,KAAK,CAAC,GAAG,IAAI;MACrB,OAAOE,OAAO;IAClB,CAAC,CAAC;;IAEF;IACArB,cAAc,CAAEoB,IAAI,IAAK;MACrB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;MACzBC,OAAO,CAACF,KAAK,CAAC,GAAG,KAAK;MACtB,OAAOE,OAAO;IAClB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAACH,KAAK,EAAEI,aAAa,KAAK;IACtD;IACA,IAAIA,aAAa,KAAK,GAAG,EAAE;MACvBvB,cAAc,CAAEoB,IAAI,IAAK;QACrB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;QACzBC,OAAO,CAACF,KAAK,CAAC,GAAG,IAAI;QACrB,OAAOE,OAAO;MAClB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMG,YAAY,GAAIC,GAAG,IAAK;IAC1B,OAAOA,GAAG,IAAI,IAAI,GAAG,GAAGA,GAAG,GAAG,IAAI,GAAG,GAAGA,GAAG;EAC/C,CAAC;EAED,oBACIrC,OAAA;IAAKsC,SAAS,EAAE7C,MAAM,CAAC8C,KAAM;IAAAC,QAAA,eACzBxC,OAAA;MAAKsC,SAAS,EAAE7C,MAAM,CAACgD,SAAU;MAAAD,QAAA,eAC7BxC,OAAA;QAAIsC,SAAS,EAAE7C,MAAM,CAACiD,IAAK;QAAAF,QAAA,EACtBnC,KAAK,CAACe,GAAG,CAAC,CAACuB,IAAI,EAAEZ,KAAK,KAAK;UACxB,MAAMa,UAAU,GAAGrC,QAAQ,CAACwB,KAAK,CAAC;UAClC,MAAMc,gBAAgB,GAAGlC,WAAW,CAACoB,KAAK,CAAC;UAE3C,oBACI/B,OAAA,CAACN,MAAM,CAACoD,EAAE;YAENR,SAAS,EAAE,GAAG7C,MAAM,CAACsD,IAAI,EAAG;YAC5BC,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACC,KAAK,CAAE;YAClCkB,OAAO,EAAE;cAAEC,OAAO,EAAEN,UAAU,GAAG,GAAG,GAAG;YAAE,CAAE;YAC3CO,UAAU,EAAE;cAAEC,QAAQ,EAAE;YAAI,CAAE;YAC9BC,KAAK,EAAE;cAAEC,cAAc,EAAE;YAAc,CAAE;YACzCC,mBAAmB,EAAEA,CAAA,KACjBrB,uBAAuB,CAACH,KAAK,EAAEa,UAAU,GAAG,GAAG,GAAG,CAAC,CACtD;YAAAJ,QAAA,gBAEDxC,OAAA;cACIsC,SAAS,EAAE7C,MAAM,CAAC+D,QAAS;cAC3BH,KAAK,EAAE;gBACHI,kBAAkB,EAAE,QAAQ;gBAC5BC,QAAQ,EAAE,UAAU;gBACpBC,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE;cACZ,CAAE;cAAApB,QAAA,eAEFxC,OAAA;gBAAKsC,SAAS,EAAE7C,MAAM,CAACoE,KAAM;gBAAArB,QAAA,EAAC;cAAC;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eAENjE,OAAA;cACIsC,SAAS,EAAE7C,MAAM,CAACyE,QAAS;cAC3Bb,KAAK,EAAE;gBACHc,SAAS,EAAE,iBAAiB;gBAC5BV,kBAAkB,EAAE,QAAQ;gBAC5BC,QAAQ,EAAE,UAAU;gBACpBC,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE;cACZ,CAAE;cAAApB,QAAA,GAEDK,gBAAgB,iBACb7C,OAAA;gBAAKsC,SAAS,EAAE,GAAG7C,MAAM,CAAC2E,QAAQ,IAAI3E,MAAM,CAACkD,IAAI,CAACtB,IAAI,CAAC,EAAG;gBAAAmB,QAAA,GACrDG,IAAI,CAACtB,IAAI,KAAK,MAAM,iBACjBrB,OAAA,CAAAE,SAAA;kBAAAsC,QAAA,gBACIxC,OAAA;oBACIsC,SAAS,EAAE7C,MAAM,CAAC4E,IAAK;oBACvBC,GAAG,EAAExE,UAAW;oBAChByE,GAAG,EAAC;kBAAM;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACFjE,OAAA;oBAAIsC,SAAS,EAAE7C,MAAM,CAAC+E,MAAO;oBAAAhC,QAAA,EACxBJ,YAAY,CAACO,IAAI,CAACrB,KAAK;kBAAC;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzB,CAAC;gBAAA,eACP,CACL,EACAtB,IAAI,CAACtB,IAAI,KAAK,MAAM,iBACjBrB,OAAA;kBACIsC,SAAS,EAAE7C,MAAM,CAACgF,QAAS;kBAC3BH,GAAG,EAAEzE,UAAW;kBAChB0E,GAAG,EAAC;gBAAM;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CACJ,EACAtB,IAAI,CAACtB,IAAI,KAAK,MAAM,iBACjBrB,OAAA;kBACIsC,SAAS,EAAE7C,MAAM,CAACiF,QAAS;kBAC3BJ,GAAG,EAAE1E,UAAW;kBAChB2E,GAAG,EAAC;gBAAM;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CACJ,EACAtB,IAAI,CAACtB,IAAI,KAAK,MAAM,iBACjBrB,OAAA;kBAAIsC,SAAS,EAAE7C,MAAM,CAAC+E,MAAO;kBAAAhC,QAAA,EAAC;gBAAE;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CACvC,EACAtB,IAAI,CAACtB,IAAI,KAAK,MAAM,iBACjBrB,OAAA;kBAAIsC,SAAS,EAAE7C,MAAM,CAAC+E,MAAO;kBAAAhC,QAAA,EAAC;gBAAC;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CACtC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CACR,EAEApB,gBAAgB,iBACb7C,OAAA;gBACIsC,SAAS,EAAE,GAAG7C,MAAM,CAACkF,UAAU,IAAIlF,MAAM,CAACmF,cAAc,IAAInF,MAAM,CAACoF,cAAc,EAAG;gBACpFxB,KAAK,EAAE;kBAAEyB,eAAe,EAAE,OAAOnF,WAAW;gBAAI;cAAE;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GA3EDlC,KAAK;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4EH,CAAC;QAEpB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7D,EAAA,CA7JQD,IAAI;AAAA4E,EAAA,GAAJ5E,IAAI;AA+Jb,eAAeA,IAAI;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}