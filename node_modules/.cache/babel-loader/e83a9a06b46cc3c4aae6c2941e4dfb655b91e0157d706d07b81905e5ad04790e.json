{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/test-task/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [scope, setScope] = useState(0);\n  const [xtwo, setXtwo] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [overlayCard, setOverlayCard] = useState(null);\n  const [fiveNumber, setFiveNumber] = useState(5);\n  const [xtwoNumber, setXtwoNumber] = useState(1);\n  const [zeroNumber, setZeroNumber] = useState(1);\n  const [bombNumber, setBombNumber] = useState(1);\n  const [cashNumber, setCashNumber] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const WorkCards = card => {\n    switch (card.type) {\n      case \"cash\":\n        setOverlayCard(card);\n        setCashNumber(prev => prev - 1);\n        break;\n      case \"bomb\":\n        setOverlayCard(card);\n        setBombNumber(prev => prev - 1);\n        break;\n      case \"xtwo\":\n        setXtwo(1);\n        setScope(prev => prev * 2);\n        setXtwoNumber(prev => prev - 1);\n        break;\n      case \"zero\":\n        setZeroNumber(0);\n        break;\n      case \"five\":\n        if (xtwo === 1) {\n          setScope(prev => prev + card.value * 2);\n          setXtwo(0);\n          setFiveNumber(prev => prev - 1);\n        } else {\n          setScope(prev => prev + card.value);\n          setFiveNumber(prev => prev - 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const handleCardReveal = (card, index) => {\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      index\n    }]);\n    WorkCards(card);\n    if (card.type === \"cash\" || card.type === \"bomb\") {\n      setOverlayCard(card);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RewardCounter, {\n      scope: scope\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCardReveal: handleCardReveal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tips, {\n      five: fiveNumber,\n      xtwo: xtwoNumber,\n      zero: zeroNumber,\n      bomb: bombNumber,\n      cash: cashNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tapbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), overlayCard && /*#__PURE__*/_jsxDEV(Overlay, {\n      card: overlayCard,\n      scope: scope,\n      onClose: () => setOverlayCard(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"5lPr2GN6W3UWfwUW4JyVc0qHbbE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Tapbar","Tips","Title","Button","Grid","Navbar","RewardCounter","Overlay","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","scope","setScope","xtwo","setXtwo","selectedCards","setSelectedCards","overlayCard","setOverlayCard","fiveNumber","setFiveNumber","xtwoNumber","setXtwoNumber","zeroNumber","setZeroNumber","bombNumber","setBombNumber","cashNumber","setCashNumber","gameStarted","setGameStarted","WorkCards","card","type","prev","value","handleCardReveal","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardReveal","five","zero","bomb","cash","onClose","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/test-task/src/pages/Game.js"],"sourcesContent":["import Tapbar from \"../components/Tapbar/Tapbar\";\nimport Tips from \"../components/Tips/Tips\";\nimport Title from \"../components/Title/Title\";\nimport Button from \"../components/Button/Button\";\nimport Grid from \"../components/Grid/Grid\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport RewardCounter from \"../components/Reward-counter/Reward-counter\";\nimport Overlay from \"../components/Overlay /Overlay\"\n\nimport { useState } from \"react\";\n\nfunction Game() {\n    const [scope, setScope] = useState(0);\n    const [xtwo, setXtwo] = useState(0);\n    const [selectedCards, setSelectedCards] = useState([]);\n    const [overlayCard, setOverlayCard] = useState(null);\n    const [fiveNumber, setFiveNumber] = useState(5);\n    const [xtwoNumber, setXtwoNumber] = useState(1);\n    const [zeroNumber, setZeroNumber] = useState(1);\n    const [bombNumber, setBombNumber] = useState(1);\n    const [cashNumber, setCashNumber] = useState(1);\n    const [gameStarted, setGameStarted] = useState(false);\n\n    const WorkCards = (card) => {\n        switch (card.type) {\n            case \"cash\":\n                setOverlayCard(card);\n                setCashNumber(prev => prev - 1);\n                break;\n            case \"bomb\":\n                setOverlayCard(card);\n                setBombNumber(prev => prev - 1);\n                break;\n            case \"xtwo\":\n                setXtwo(1);\n                setScope(prev => prev * 2);\n                setXtwoNumber(prev => prev - 1);\n                break;\n            case \"zero\":\n                setZeroNumber(0);\n                break;\n            case \"five\":\n                if (xtwo === 1) {\n                    setScope(prev => prev + card.value * 2);\n                    setXtwo(0);\n                    setFiveNumber(prev => prev - 1);\n                } else {\n                    setScope(prev => prev + card.value);\n                    setFiveNumber(prev => prev - 1);\n                }\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    const handleCardReveal = (card, index) => {\n        setSelectedCards(prev => [...prev, { ...card, index }]);\n        WorkCards(card);\n\n        if (card.type === \"cash\" || card.type === \"bomb\") {\n            setOverlayCard(card);\n        }\n    };\n\n    return (\n        <>\n            <Navbar />\n            <Title />\n            <RewardCounter scope={scope} />\n            <Grid onCardReveal={handleCardReveal} />\n            <Tips five={fiveNumber} xtwo={xtwoNumber} zero={zeroNumber}  bomb={bombNumber} cash={cashNumber} />\n            <Button />\n            <Tapbar />\n\n            {overlayCard && (\n                <Overlay\n                    card={overlayCard}\n                    scope={scope}\n                    onClose={() => setOverlayCard(null)}\n                />\n            )}\n        </>\n    );\n}\n\n\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}